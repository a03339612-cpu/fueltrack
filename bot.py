import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
# –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ª—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN", "YOUR_BOT_TOKEN") 

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_WEBAPP_URL' –Ω–∞ URL, –≥–¥–µ –±—É–¥–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –≤–∞—à FastAPI —Å–µ—Ä–≤–µ—Ä
# –ù–∞–ø—Ä–∏–º–µ—Ä, 'https://your-app-name.onrender.com'
WEBAPP_URL = os.getenv("WEBAPP_URL", "YOUR_WEBAPP_URL")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

@dp.message(CommandStart())
async def send_welcome(message: types.Message):
    """
    –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Web App –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start
    """
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üöÄ –û—Ç–∫—Ä—ã—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ç–æ–ø–ª–∏–≤–∞",
        web_app=WebAppInfo(url=WEBAPP_URL)
    )
    
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
        reply_markup=builder.as_markup()
    )


# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
async def main():
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(level=logging.INFO)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
    if BOT_TOKEN == "YOUR_BOT_TOKEN":
        logging.critical("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π BOT_TOKEN.")
        return
        
    if WEBAPP_URL == "YOUR_WEBAPP_URL":
        logging.critical("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π WEBAPP_URL.")
        return

    # –ó–∞–ø—É—Å–∫ polling
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
